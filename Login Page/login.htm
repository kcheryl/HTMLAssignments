<!DOCTYPE html>
<meta charset="UTF-8">
<html>

<head>
    <style type="text/css">
        body {
            font-family: Arial, Helvetica, sans-serif;
            font-size: 10pt;
        }
        a {
            color: green;
            font-weight: bold;
            cursor: pointer;
        }
        a:hover {
            text-decoration: underline;
        }
        h1 {
            color: orangered;
            text-align: center;
        }
        h1 small {
            color: #000;
            font-weight: normal;
            font-size: 70%;
        }
        input[type=text], input[type=password], select {
            margin: 0px 5px;
            padding: 3px;
            height: 15px;
            width: 200px;
        }
        select {
            margin: 0px 5px;
            padding: 3px;
            height: 25px;
            width: 200px;
        }
        .floatLeft {
            float: left;
        }
        .floatRight {
            float: right;
        }
        .clear {
            clear: both;
        }
        .label {
            color: green;
            font-weight: bold;
            font-size: 14pt;
            width: 120px;
            margin: 3px 2px;
        }
        #virtualLink {
            color: orangered;
            font-weight: bold;
            cursor: pointer;
        }
        #virtualLink:hover {
            text-decoration: underline;
        }
        #virtualKeyboard {
            float: left;
            margin: 50px 0 0 75px;
            text-align: center;
        }
        .vkeytitle {
            color: orangered;
            font-weight: bold;
            margin: 5px 2px;
        }
        .keySquare {
            color: blue;
            font-size: 8pt;
            border: 2px solid blue;
            padding: 2px;
            cursor: pointer;
            margin: 5px 2px;
            font-family: Courier New, Courier, monospace;
        }
        .keyDown {
            color: white;
            font-size: 8pt;
            border: 2px solid blue;
            padding: 2px;
            cursor: pointer;
            margin: 5px 2px;
            font-family: Courier New, Courier, monospace;
            background: #000;
        }
        /* Emulate the spacing with the space character  */
        /* Each space is about half a keySquare size */
        .keyEmpty {
            color: blue;
            font-size: 8pt;
            padding: 2px;
            cursor: pointer;
            margin: 5px 1px;
        }
        #loginBtn {
            font-size: 12pt;
            background: #EEE;
            border: 1px solid #444;
            display: block;
            padding: 5px;
            text-align: center;
            margin: auto;
            margin-top: 20px;
            cursor: pointer;
        }
        #loginBtn:hover {
            background: #FFF;
        }
        #optLinks {
            text-align: center;
        }
        #optLinks a {
            color: #000;
        }
        #loginInfo {
            padding: 10px;
            border: 1px solid #DDD;
            max-width: 540px;
            overflow: auto;
            float:left;
        }
        #loginInfo table {
            margin: auto;            
        }
        #keysZone {
            border: 2px solid #000;
            padding: 2px;
        }
        #securityInfo {
            text-align: justify;
        }
        #securityInfo h1 {
            text-align: left;
            font-size: 16pt;
            margin-bottom: 0px;
        }
        #securityInfo p {
            margin: 3px;
        }
        #securityInfo ol {
            margin: 3px;
        }
        #securityInfo li {
            margin: 3px;
            margin-left: -25px;
        }
    </style>

    <script type="text/javascript">
        var isCaps = 0;

        // Draw the keypad
        // First create the content string using r1-r5
        // For each string character, create a div with keySquare class, and floatLeft
        // Also set the onClick attribute to the JS function keyClick(val)
        // For each string, clearBoth so that the next string starts on the new line
        // Space is drawn with the keyEmpty class to pad half-key space
        function drawKeyboard() {
            var base = document.getElementById("keysZone");
            var clear = document.createElement("div"); // <div></div>
            clear.classList = "clear"; // <div class="clear"></div> || <div style="clear:both"></div>
            base.appendChild(clear);

            var r1 = "+-~',\\{`>.}]=|<[";
            var r2 = "!$)^;?:(#%&/_*\"@";
            var r3 = "euiptyoqwr         724";
            var r4 = "  djkglfhas          509";
            var r5 = "      mvzbcnx            361";
            appendRow(r1, base, clear);
            appendRow(r2, base, clear);
            appendRow(r3, base, clear);
            appendRow(r4, base, clear);
            appendRow(r5, base, clear);

            // The last row is handled specially due to the key label (Caps / Bksp)
            // Manually draw these 2 keys
            var capsBtn = document.createElement("div");
            capsBtn.classList = "keySquare floatLeft";
            capsBtn.id = "caps";
            capsBtn.setAttribute("onclick", "keyClick('caps')");
            capsBtn.innerText = "Caps";

            var bkspBtn = document.createElement("div");
            bkspBtn.classList = "keySquare floatLeft";
            bkspBtn.id = "bksp";
            bkspBtn.setAttribute("onclick", "keyClick('bksp')");
            bkspBtn.innerText = "Bksp";

            var spacing = "           ";
            appendRow(spacing, base);
            base.appendChild(capsBtn);
            base.appendChild(bkspBtn);

            var finalr = "                   8";
            appendRow(finalr, base, clear);
        }

        // Draws the content of each content string, iterating through the characters
        function appendRow(s, base, clr) {
            for (var i=0; i<s.length; i++) {
                var sq = document.createElement("div"); //<div></div>
                if (s[i] != " ") {
                    // If this is not a space
                    sq.classList = "keySquare floatLeft"; //<div class="keySquare floatLeft"></div>
                    sq.setAttribute("onclick", "keyClick('"+s[i]+"')");
                    sq.id = s[i];
                } else {
                    // Just apply the space style
                    sq.classList = "keyEmpty floatLeft";
                }
                sq.innerText = s[i];
                base.appendChild(sq);
            }
            // Allows for prevention of clear:both when not required
            if (clr != undefined) {
                var clr_new = clr.cloneNode();
                base.appendChild(clr_new);
            }
        }

        // Toggles the keyboard.
        // When it is shown, this will hide the keyboard
        // Same vice versa.
        function displayKeyboard() {
            var kb = document.getElementById("virtualKeyboard");
            // kb.style.display = kb.style.display === 'none' ? 'block' : 'none';
            if (kb.style.display === 'none') {
                kb.style.display = 'block';
            } else {
                kb.style.display = 'none';
            }
        }

        // Logic for the keypress values into the password input field.
        function keyClick(val) {
            var passwd = document.getElementById("custPass");

            if (val ===  'clear') { // clear the password field
                passwd.value = '';
            } else if (val === 'bksp') { // removes the last character in the password field
                passwd.value = passwd.value.substring(0, passwd.value.length-1);
            } else if (val === 'caps') { // toggles the isCaps variable, and apply the respective styling
                if (isCaps === 0) {
                    isCaps = 1;
                    document.getElementById("caps").classList = "keyDown floatLeft";
                } else {
                    isCaps = 0;
                    document.getElementById("caps").classList = "keySquare floatLeft";
                }
            } else { // Normal character keypress
                var enterThis = val;
                if (isCaps === 1) {
                    enterThis = val.toUpperCase();
                }
                passwd.value += enterThis;
                // alert(passwd.value);
            }
        }

    </script>
</head>

<body>


    <div id="loginInfo">
    <!-- Heading Table -->
    <table>
        <tr>
            <td>
                <h1>
                    Personal Banking <br />
                    <small>To access your account, please fill in the details and click login.</small>
                </h1>
            </td>
        </tr>
    </table>

    <!-- Form Table -->
    <table>
    <form>
        <tr>
            <td><span class="label">Customer ID</span></td>
            <td><input type="text" placeholder="Customer ID" id="custId"/></td>
        </tr>
        <tr>
            <td><span class="label">Password</span></td>
            <td><input type="password" placeholder="Password" id="custPass"/></td>
            <td><span id="virtualLink" onclick="displayKeyboard()">Click here</span> to use <br \> Virtual Keypad</td>                
        </tr>
        <tr>
            <td><span class="label">Start in</span></td>
            <td>
                <select>
                    <option value="home" selected>Home Page</option>
                    <option value="settings">Account Settings</option>
                </select>
            </td>
            <td><a>Know More</a></td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td><input type="submit" value="Login" id="loginBtn"></td>
            <td>&nbsp;</td>
        </tr>
        <tr>
            <td>&nbsp;</td>
            <td id="optLinks">
                <a>Generate Online Password</a><br/>
                <a>Forgot Password</a><br/>
                <a>Modify Transaction Limit</a><br/><br/><br/>
                <a style="color:red">View Demo</a>&nbsp;|&nbsp;
                <a>Know More</a>&nbsp;|&nbsp;
                <a>Register</a>
            </td>
            <td>&nbsp;</td>
        </tr>
    </form>
    </table>
    </div>

    <!-- Virtual Keypad -->
    <div id="virtualKeyboard" style="display:none">
        <h3 class="vkeytitle"> Use Virtual Keypad for enhanced security </h3>
        
        <div id="keysZone">
            <div>
                <span class="vkeytitle floatLeft">Virtual Keypad (Only for Password)</span>
                <div class="floatRight keySquare" onclick="displayKeyboard()"> &cross; </div>            
                <div class="floatRight keySquare" onclick="keyClick('clear')"> Clear </div>
            </div>

            <!-- generated by js -->
            <script>drawKeyboard()</script>
            <!-- end of generation -->
        </div>
    </div>

    <!-- Security Info -->
    <div style="clear:both"></div>
    <div id="securityInfo">
        <h1>Security Information</h1>    <div style="clear:both"></div>        

        <div class="floatLeft" style="width: 825px">
            <p>
                You may have received a spam mail asking you to confirm details such as customer id and password pertaining to your
                Internet banking account. This is called, in technical terms, Phishing <a>(click here to know more)</a>. Please beware of such fradulent mails,
                asking you to provide or update such information on a website or by clicking on a link within the email.
            </p>
            <p>We take your personal information seriously and will never ask for details about your Account / PINs or Passwords over the email.</p>
            <p>The Bank is not responsible for any fradulent transactions due to compromise or inadvertent disclosure of account related information.</p>
            <p>
                <b>Note:</b>
                <ol>
                    <li>Register your Mobile number with us and get SMS Alerts to keep track of high value card & net banking transactions in your account.</li>
                    <li>Avoid doing net banking transactions from Cyber Cafes.</li>
                    <li>Use the Virtual Keypad for enhanced security while keying in your net banking passwords.</li>
                </ol>
            </p>
        </div>

        <img class="floatLeft" src="entrust.png" style="height:100px; width:100px">
    </div>
</body>

</html>